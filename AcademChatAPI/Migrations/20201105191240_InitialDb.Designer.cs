// <auto-generated />
using System;
using AcademChatAPI.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AcademChatAPI.Migrations
{
    [DbContext(typeof(ChatContext))]
    [Migration("20201105191240_InitialDb")]
    partial class InitialDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AcademChatAPI.Entities.ChatRoom", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("Userid")
                        .HasColumnType("bigint");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Userid");

                    b.ToTable("ChatRooms");
                });

            modelBuilder.Entity("AcademChatAPI.Entities.Message", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("chat_room_id")
                        .HasColumnType("bigint");

                    b.Property<int?>("message_num")
                        .HasColumnType("integer");

                    b.Property<string>("text")
                        .HasColumnType("text");

                    b.Property<DateTime>("time_stamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long>("to_user_id")
                        .HasColumnType("bigint");

                    b.Property<long>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("chat_room_id");

                    b.HasIndex("to_user_id");

                    b.HasIndex("user_id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("AcademChatAPI.Entities.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<string>("position")
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<string>("secret")
                        .HasColumnType("character varying(32)")
                        .HasMaxLength(32);

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AcademChatAPI.Entities.ChatRoom", b =>
                {
                    b.HasOne("AcademChatAPI.Entities.User", null)
                        .WithMany("ChatRooms")
                        .HasForeignKey("Userid");
                });

            modelBuilder.Entity("AcademChatAPI.Entities.Message", b =>
                {
                    b.HasOne("AcademChatAPI.Entities.ChatRoom", "ChatRoom")
                        .WithMany("Messages")
                        .HasForeignKey("chat_room_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcademChatAPI.Entities.User", "to_user")
                        .WithMany()
                        .HasForeignKey("to_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcademChatAPI.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
